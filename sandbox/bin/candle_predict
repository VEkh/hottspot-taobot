#!/bin/bash
# shellcheck disable=1090,1091,2207

set -e

api_name=$(dirname "${BASH_SOURCE[0]}" | xargs basename)
[[ "${api_name}" = "bin" ]] && rel_path="/../" || rel_path="/../../"
app_dir=$(realpath "$(dirname "${BASH_SOURCE[0]}")${rel_path}")

source "${app_dir}/bin/utils" # ASCII, ascii_print

validate_api_scope "${api_name}"

log_dir="${app_dir}/log/${api_name}/ml/candle_predict"

ascii_print "$(date)\n" "cyan"

mkdir -p "${log_dir}"

function build_candles_each() {
  ascii_print "ðŸ”¨ Building candles for each symbol" "cyan"

  symbols=($(cat "${app_dir}/bin/${api_name}/stream_symbols"))

  for symbol in "${symbols[@]}"; do
    "${app_dir}/build/db" build_candles "${symbol}" "${@}" > "${log_dir}/${symbol}.log"
  done
}

function predict_all() {
  ascii_print "ðŸ¤– Updating predictions" "cyan"

  build_candles_each "${@}"

  symbols=($(cat "${app_dir}/bin/${api_name}/trade_symbols"))

  for symbol in "${symbols[@]}"; do
    "${app_dir}/bin/ml/candle_predict" predict "${symbol}" "${@}" >> "${log_dir}/${symbol}.log" 2>/dev/null
  done
}

function train_all() {
  ascii_print "ðŸ¤– Re-training models for all symbols" "cyan"

  build_candles_each "${@}"

  "${app_dir}/bin/ml/candle_predict" train "${@}" >> "${log_dir}/train_all.log" 2>/dev/null
}

function train_each() {
  ascii_print "ðŸ¤– Re-training models for each symbol" "cyan"

  build_candles_each "${@}"

  symbols=($(cat "${app_dir}/bin/${api_name}/trade_symbols"))

  for symbol in "${symbols[@]}"; do
    "${app_dir}/bin/ml/candle_predict" train "${symbol}" "${@}" >> "${log_dir}/${symbol}.log" 2>/dev/null
  done
}

case "${1}" in
  build_candles_each)
    build_candles_each "${@:2}"
    ;;
  predict_all)
    predict_all "${@:2}"
    ;;
  train_each)
    train_each "${@:2}"
    ;;
  *)
    ascii_print "ðŸ¤– ${ASCII["underline"]}FIVE MINUTE PREDICTIONS" "yellow"
    ascii_print "Commands: " "yellow"
    ascii_print "build_candles_each --duration-min [--env]....Build candles for all symbols" "yellow"
    ascii_print "predict_all        --duration-min [--env]....Update the predictions for all symbols" "yellow"
    ascii_print "train_each         --duration-min [--env]....Train models for all symbols" "yellow"
esac
