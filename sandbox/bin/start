#!/bin/bash
# shellcheck disable=1090,1091,2207

set -e
shopt -s extglob

app_dir=$(realpath "$(dirname "${BASH_SOURCE[0]}")/../../")
project=$(dirname "${0}" | xargs basename)

# ASCII, ascii_print, extract_flags, read_env_symbols, to_lower, to_upper
source "${app_dir}/bin/utils"

flags=($(extract_flags "${@}"))
declare -A flag_map
extract_flags_to_map flag_map "${flags[@]}"

api_key="${flag_map["api-key"]}"

if [[ "${project}" = "bin" ]]; then
  cmd=$(basename "${0}")

  ascii_print "Please run in the context of a project (e.g. ./bin/<project>/${cmd})" "red" >&2

  exit 1;
fi

ascii_print "$(date)\n" "cyan"

function symbol_start() {
  if [[ "${project}" = "alpaca" && -z "${api_key}" ]]; then
    ascii_print "You must provide an --api-key=<API_KEY> option" "red" >&2
    exit 1
  fi

  log_dir="${app_dir}/log/${project}/${api_key}"
  symbol=$(to_upper "$1")

  mkdir -p "${log_dir}"

  log_file="${log_dir}/${symbol}.log"

  ascii_print "Starting TaoBot for ${ASCII["normal"]}${ASCII["cyan"]}${symbol}" "yellow"
  echo "" > "${log_file}"

  "${app_dir}/build/${project}" tao_bot "${symbol}" "${flags[@]}" >> "$log_file" 2>&1 &
}

case $1 in
  +([[:alpha:]]))
    symbol_start "${1}"
    ;;

  +([[:alpha:]_[:alpha:]]))
    symbol_start "${1}"
    ;;

  *)
    symbols=($(read_env_symbols "${api_key}" "${project}"))

    if [[ ("${#symbols[@]}" == 0) ]]; then
      ascii_print "You must provide the \"${api_key}\" env with \`env_symbols\`" "red" >&2

      exit 1
    fi

    for symbol in "${symbols[@]}"; do
      symbol_start "${symbol}"
    done
    ;;
esac

printf "%b" "${ASCII["reset"]}"
