#!/bin/bash

set -e

app_dir=$(realpath "$(dirname "${BASH_SOURCE[0]}")/../../../")
scripts_dir=$(realpath "$(dirname "${BASH_SOURCE[0]}")/../scripts")

# shellcheck disable=1090,1091
source "${app_dir}/bin/utils" # extract_flags_to_map, get_env_flag, load_config

function bt_truncate() {
  local -A flags
  extract_flags_to_map flags "${@}"

  api_key="${flags["api-key"]}"
  api_name="${flags["api"]}"

  if [[ -z "${api_name}" ]]; then
    ascii_print "Provide an --api=<api_name> option" "red" >&2
    exit 1
  fi

  if [[ -z "${api_key}" ]]; then
    ascii_print "Provide an --api-key=<api_key> option" "red" >&2
    exit 1
  fi

  env="$(get_env_flag "${@}")"
  app_config=$(load_config "${api_name}" "${api_key}")
  db_config=$(load_config "db" "${env}")

  api_key_id=$(echo -e "${app_config}" | jq -r ".id")
  db_name="$(echo "${db_config}" | jq -r ".name")"

  ascii_print "Truncating Backtest Data in ${ASCII["red"]}${db_name}" "yellow"

  cmd="psql ${db_name}"
  cmd+=" -v API_KEY_ID=\"${api_key_id}\""
  cmd+=" < ${scripts_dir}/truncate_performance.sql"

  sh -c "${cmd}"
}
