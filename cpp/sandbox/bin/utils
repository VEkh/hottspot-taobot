#!/bin/bash

declare -A ASCII=(
  ["bold"]="\033[1m"
  ["cyan"]="\033[36m"
  ["green"]="\033[32m"
  ["normal"]="\033[10m"
  ["red"]="\033[31m"
  ["reset"]="\033[0m"
  ["underline"]="\033[4m"
  ["yellow"]="\033[33m"
)

export ASCII

function ascii_print() {
  message="${ASCII["bold"]}"

  for fmt in "${@:2}"; do
    message+="${ASCII["${fmt}"]}"
  done

  echo -e "${message}${1}${ASCII["reset"]}"
}

function extract_args() {
  args=()

  for arg in "${@}"; do
    [[ ! "${arg}" =~ ^-- ]] && args+=("${arg}")
  done

  echo -e "${args[@]}"
}

function extract_flags() {
  flags=()

  for flag in "${@}"; do
    [[ "${flag}" =~ ^-- ]] && flags+=("${flag}")
  done

  echo -e "${flags[@]}"
}

function extract_flags_to_map() {
  if [[ ! "$(declare -p "${1}" 2>/dev/null)" =~ ^(declare -A) ]]; then
    ascii_print "You must pass in a map as the first arg. You passed: \`${1}\`" "red" >&2
    exit 1
  fi


  local -n map=${1} 2>/dev/null

  for flag in "${@:2}"; do
    key_value=($(
      echo -e "${flag}" |
      awk '{ gsub("--", "", $0); gsub("=", " ", $0); print $0 }'
    ))

    key="${key_value[0]}"

    if [[ -n "${key}" ]]; then
      [[ -z "${key_value[1]}" ]] && value="1" || value="${key_value[1]}"

      # shellcheck disable=SC2034
      map["${key}"]="${value}"
    fi
  done
}

function get_env_flag() {
  local -A flags=(["env"]="development")

  extract_flags_to_map flags "${@}"

  echo -e "${flags["env"]}"
}

function to_lower() {
  echo -e "$1" | awk '{ print tolower($0) }'
}

function to_title() {
  echo -e "$1" | awk '{ print toupper(substr($0, 1, 1)) substr($0, 2) }'
}

function to_upper() {
  echo -e "$1" | awk '{ print toupper($0) }'
}
