#!/bin/bash
# shellcheck disable=2009

set -e
shopt -s extglob

app_dir=$(realpath "$(dirname "$0")/../../")
project=$(dirname "$0" | xargs basename)

# ASCII
# ascii_print
# extract_flags
# to_lower
# to_upper
# shellcheck disable=1090
source "${app_dir}/bin/utils"

if [[ $project = "bin" ]]; then
  cmd=$(basename "$0")

  ascii_print "Please run in the context of a project (e.g. ./bin/<project>/${cmd})" "red" >&2

  exit 1;
fi

flags=($(extract_flags "${@}"))

declare -A flag_map
extract_flags_to_map flag_map "${flags[@]}"

api_key="${flag_map["api-key"]}"

if [[ "${project}" = "alpaca" && -z "${api_key}" ]]; then
  ascii_print "You must provide an --api-key=<API_KEY> option" "red" >&2
  exit 1
fi

ascii_print "$(date)\n" "cyan"

function get_status() {
  state=$(
    ps aux |
    grep "[s]tream_account" |
    grep -vE "heartbeat|restart|status|stop" |
    grep "${project}" |
    grep --color "${api_key}" || true
  )

  echo -e "${state}"
}

function print_status() {
  state=$(get_status)

  if [[ -z "${state}" ]]; then
    ascii_print "âœ… Account is not streaming." "green"
  else
    printf "%b" "${ASCII["reset"]}"
    get_status
  fi
}

function start_if_stopped() {
  state=$(get_status)

  if [[ -z "${state}" ]]; then
    ascii_print "ðŸ˜´ Account is not streaming. Starting stream.\n" "green"
    start_stream "${@}"
  else
    ascii_print "ðŸ’– Account is streaming. Doing nothing." "cyan"
  fi
}

function start_stream() {
  log_dir="${app_dir}/log/${project}/${api_key}"
  log_file="${log_dir}/account_stream.log"

  mkdir -p "${log_dir}"

  ascii_print "Starting ${ASCII["normal"]}${ASCII["cyan"]}${api_key} ${ASCII["bold"]}${ASCII["yellow"]}Account Stream" "yellow"

  "${app_dir}/build/${project}" stream_account "${@}" > "${log_file}" 2>&1 &
}

function stop_stream() {
  state=$(get_status)

  if [[ -z "${state}" ]]; then
    ascii_print "âœ… Account is not streaming." "green"
  else
    ascii_print "ðŸ›‘ Stopping Account Stream}" "cyan"

    get_status | awk '{print $2}' | xargs kill
  fi
}

case $1 in
  heartbeat)
    start_if_stopped "${@:2}"
    ;;

  restart)
    stop_stream
    start_stream "${@:2}"
    ;;

  start)
    start_stream "${@:2}"
    ;;

  status)
    print_status
    ;;

  stop)
    stop_stream

    ;;

  *)
    ascii_print "${ASCII["underline"]}$(to_upper "${project}") ACCOUNT STREAM\n" "yellow"
    ascii_print "Description: Stream the brokerage account info.\n" "cyan"
    ascii_print "Usage: stream_account [COMMAND]\n" "yellow"
    ascii_print "Commands:" "yellow"
    ascii_print "  heartbeat               Check status. Restart if stopped." "yellow"
    ascii_print "  restart   <OPTIONS>     Stop, then start streaming. See stop and start documentation." "yellow"
    ascii_print "  start     <OPTIONS>     Start streaming with <OPTIONS> (e.g. --paper, etc.)." "yellow"
    ascii_print "  status                  Print running stream processes, if any." "yellow"
    ascii_print "  stop                    Stop streawming account." "yellow"

    ;;
esac

printf "%b" "${ASCII["reset"]}"
