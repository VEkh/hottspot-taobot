#!/bin/bash

app_dir="$(realpath "$(dirname "${BASH_SOURCE[0]}")/../../")"
equity_api_keys=("live-alpha" "paper-alpha" "paper-beta")
equity_project="alpaca"
equity_symbols=()
forex_project="oanda"
forex_symbols=()

while IFS="" read -r line; do
  symbol="${line}"
  equity_symbols+=("${symbol}")
done < <(cat "${app_dir}/bin/${equity_project}/symbols")

while IFS="" read -r line; do
  symbol="${line}"
  forex_symbols+=("${symbol}")
done < <(cat "${app_dir}/bin/${forex_project}/symbols")

function tail_cmd() {
  log_file_dir="${app_dir}/log/${1}"

  mkdir -p "${log_file_dir}"

  filepath="${log_file_dir}/${2}.log"

  touch "${filepath}"

  echo -e "tail -f ${filepath}"
}

session="hottspot_taobot"
window=0

tmux -2 new-session -d -s "${session}" -n code
tmux send-keys -t "${session}:${window}" "${app_dir}/bin/${equity_project}/cron restart" "Enter"
tmux send-keys -t "${session}:${window}" "${app_dir}/bin/ssh restart" "Enter"
tmux send-keys -t "${session}:${window}" "${app_dir}/db/ctl restart" "Enter"
tmux split-window -h -p 100 -t "${session}:${window}"  "vim ."


symbol_i=0

for api_key in "${equity_api_keys[@]}"; do
  api_key_log_dir="${app_dir}/log/${equity_project}/${api_key}"

  mkdir -p "${api_key_log_dir}"

  for symbol in "${equity_symbols[@]}"; do
    log_filepath="${api_key_log_dir}/${symbol}.log"

    touch "${log_filepath}"

    if [[ $((symbol_i % 2)) == 0 ]]; then
      tmux new-window -t "${session}" -n "${api_key}" "tail -f ${log_filepath}"
    else
      window=$(((symbol_i / 2) + 1))
      tmux split-window -t "${session}:${window}" -h "tail -f ${log_filepath}"
    fi

    symbol_i=$((symbol_i + 1))
  done
done

tmux new-window -t "${session}" \
  -n "stock-quote-streams" \
  "$(tail_cmd "${equity_project}"  "quotes_stream")"

tmux split-window -t "${session}:stock-quote-streams" -h \
  "$(tail_cmd "${equity_project}" "quotes_watch")"

tmux split-window -t "${session}:stock-quote-streams.1" \
  "$(tail_cmd "${equity_project}" "quotes_watch_avg_one_sec_variances")"

tmux new-window -t "${session}" \
  -n "stock-account-streams" \
  "$(tail_cmd "${equity_project}/${equity_api_keys[0]}"  "account_stream")"

tmux split-window -t "${session}:stock-account-streams" -h \
  "$(tail_cmd "${equity_project}/${equity_api_keys[1]}"  "account_stream")"

tmux split-window -t "${session}:stock-account-streams.1" \
  "$(tail_cmd "${equity_project}/${equity_api_keys[2]}"  "account_stream")"

symbol_i=0
window=0

for symbol in "${forex_symbols[@]}"; do
  log_dir="${app_dir}/log/${forex_project}"

  mkdir -p "${log_dir}"

  log_filepath="${log_dir}/${symbol}.log"

  touch "${log_filepath}"

  window=$(((symbol_i / 2) + 1))

  if [[ $((symbol_i % 2)) == 0 ]]; then
    tmux new-window -t "${session}" -n "forex-${window}" "tail -f ${log_filepath}"
  else
    tmux split-window -t "${session}:forex-${window}" -h "tail -f ${log_filepath}"
  fi

  symbol_i=$((symbol_i + 1))
done

tmux new-window -t "${session}" \
  -n "forex-streams" \
  "$(tail_cmd "${forex_project}"  "account_stream")"

tmux split-window -h -t "${session}:forex-streams" \
  "$(tail_cmd "${forex_project}" "quotes_watch")"

tmux split-window -t "${session}:forex-streams.1" \
  "$(tail_cmd "${forex_project}" "quotes_watch_avg_one_sec_variances")"

tmux select-window -t "${session}:0"
tmux attach-session -t "${session}"
