#!/bin/bash

app_dir=$(realpath "$(dirname "$0")/../../")
data_dir=$(realpath "$(dirname "$0")/../../../data/")
fmt_bold="\033[1m"
fmt_red="\033[31m"
fmt_reset="\033[0m"
fmt_yellow="\033[33m"
project=$(dirname "$0" | xargs basename)

# shellcheck disable=1090,1091
source "$app_dir/bin/utils" # to_upper

performance_dir="$data_dir/$project/performance"

if [[ $project = "bin" ]]; then
  cmd=$(basename "$0")

  echo -e "${fmt_bold}${fmt_red}Please run in the context of" \
  "a project (e.g. ./bin/<project>/$cmd)${fmt_reset}"

  exit 1;
fi

shopt -s extglob
mkdir -p "$performance_dir"

function clear_performance() {
  symbol="$(to_upper "$1")"

  echo "{}" > "$performance_dir/$symbol.json"
  echo -e "\n${fmt_bold}${fmt_yellow}Cleared $symbol's performance${fmt_reset}\n"
}

case $1 in
  +([[:alpha:]_[:alpha:]]))
    clear_performance "$1"
    ;;

  *)
    symbols=()
    while IFS="" read -r line; do symbols+=("$line"); done < <(cat "$app_dir/bin/$project/symbols")

    for symbol in "${symbols[@]}"
    do
      clear_performance "$symbol"
    done
    ;;
esac
