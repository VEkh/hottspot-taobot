#!/bin/bash

fmt_bold="\033[1m"
fmt_cyan="\033[36m"
fmt_green="\033[32m"
fmt_red="\033[31m"
fmt_reset="\033[0m"
fmt_yellow="\033[33m"

function generate() {
  migrations_dir=$(realpath "$(dirname "${BASH_SOURCE[0]}")/../")
  echo -e "Directory: $(dirname "$0")"
  echo -e "${BASH_SOURCE[0]}"
  echo -e "${migrations_dir}"

  if [[ -z $1 ]]; then
    echo -e "${fmt_bold}${fmt_red}Provide a (camel,"\
            "pascal, or snake cased) migration name.${fmt_reset}"
    exit
  fi

  echo -e "${fmt_bold}${fmt_cyan}ðŸ”¨ Generating"\
          "${fmt_yellow}${1}${fmt_cyan} migration${fmt_reset}"

  formatted_name=$(
    echo -e "$1" |
    awk '{ gsub(/[[:punct:]]/, "_"); gsub(/[[:upper:]]/, "_&"); sub("^_", ""); print tolower($0); }'
  )

  timestamp=$(date "+%Y%m%d%I%M%S")
  filepath="${timestamp}_${formatted_name}.sql"

  touch "$migrations_dir/down/${filepath}"
  touch "$migrations_dir/up/${filepath}"

  echo -e "${fmt_bold}${fmt_green}ðŸŽ‰ Migration successfully written to" \
    "${fmt_yellow}${migrations_dir}/(down|up)/${filepath}${fmt_reset}"
}
