#!/bin/bash

set -e

app_dir=$(realpath "$(dirname "${BASH_SOURCE[0]}")/../")
current_dir=$(realpath "$(dirname "${BASH_SOURCE[0]}")")
scripts_dir="${current_dir}/scripts"

# shellcheck disable=1090,1091
source "${app_dir}/bin/utils" # ASCII, ascii_print, get_env_flag, load_config

ascii_print "\n$(date)\n" "cyan"

if [[ -z "${1}" ]]; then
  ascii_print "ðŸ’£ Provide a command that maps to an executable (.sql) script (e.g. setup, etc.)" "red" >&2
  exit 1
fi

if [[ ! -f "${scripts_dir}/${1}.sql" ]]; then
  ascii_print "ðŸ˜µ The script for \"${1}\" does not exist at ${scripts_dir}/${1}.sql" "red" >&2
  exit 1
fi

env=$(get_env_flag "${@}")
db_config=$(load_config "db" "${env}")

ascii_print "ðŸ¤– Authorized Execution of DB Scripts\n" "yellow"

database_name="$(echo "${db_config}" | jq ".name")"
database_password="$(echo "${db_config}" | jq ".password")"
database_username="$(echo "${db_config}" | jq ".username")"

psql_cmd="psql"
psql_cmd+=" -v DB_NAME=\"${database_name}\""
psql_cmd+=" -v DB_PASSWORD=\"${database_password}\""
psql_cmd+=" -v DB_USERNAME=\"${database_username}\""
psql_cmd+=" < ${scripts_dir}/${1}.sql"

sudo -u postgres sh -c "${psql_cmd}"

printf "%b" "${ASCII["reset"]}"
