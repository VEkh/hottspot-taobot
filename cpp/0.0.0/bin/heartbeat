#!/bin/bash
# shellcheck disable=2009

set -e

app_dir=$(realpath "$(dirname "$0")/../../")
fmt_bold="\033[1m"
fmt_cyan="\033[36m"
fmt_green="\033[32m"
fmt_red="\033[31m"
fmt_reset="\033[0m"
project=$(dirname "$0" | xargs basename)

# shellcheck disable=1090
source "${app_dir}/bin/utils" # extract_flags, extract_flags_to_map

if [[ $project = "bin" ]]; then
  cmd=$(basename "$0")

  echo -e "${fmt_bold}${fmt_red}Please run in the context of" \
  "a project (e.g. ./bin/<project>/$cmd)${fmt_reset}"

  exit 1;
fi

function get_status() {
  flags=($(extract_flags "${@}"))
  local -A flag_map
  extract_flags_to_map flag_map "${flags[@]}"

  api_key="${flag_map["api-key"]}"

  if [[ "${project}" = "alpaca" && -z "${api_key}" ]]; then
    ascii_print "You must provide an --api-key=<API_KEY> option" "red" >&2
    exit 1
  fi

  state=$(
    ps aux |
    grep "[t]ao_bot" |
    grep "${project}" |
    grep --color "${api_key}"
  )

  echo -e "${state}"
}

state=$(get_status "${@}")

if [[ -z "${state}" ]]; then
  echo -e "${fmt_bold}${fmt_cyan}No running instances of TaoBot. Starting.${fmt_reset}"

  "${app_dir}/bin/${project}/restart" "${@}"
else
  echo -e "${fmt_bold}${fmt_green}ðŸ’– TaoBot is already running. Doing nothing.${fmt_reset}"
fi
